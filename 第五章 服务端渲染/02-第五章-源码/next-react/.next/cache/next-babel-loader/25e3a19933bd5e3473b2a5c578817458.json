{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch'; // const FetchData=(props)=>(\n//     <div>\n//         <h3>获取服务端数据</h3>\n//         <ul>\n//             {\n//                 props.productList.map(item=>(\n//                     <li key={item.id}>\n//                         {item.title}\n//                     </li>\n//                 ))\n//             }\n//         </ul>\n//     </div>\n// )\n// // 当页面初次加载时，只会在服务端执行一次，在路由的切换时客户端才会被执行。\n// FetchData.getInitialProps=async function(){\n//   let res=await fetch(\" http://localhost:8081/api/getProductList\")\n//  let data=await res.json();\n//  return {productList:data.message}\n// }\n// export default FetchData\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"ul\", null, props.productList.map(function (item) {\n        return __jsx(\"li\", {\n          key: item.id\n        }, item.title);\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var res, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\" http://localhost:8081/api/getProductList\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                productList: data.message\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return _default;\n}(React.Component); // npm install --save isomorphic-unfetch\n\n\nexport { _default as default };","map":{"version":3,"sources":["E:/D/博学谷/React课程/视频录制/案例/next-react/pages/fetch-data/index.js"],"names":["React","fetch","props","productList","map","item","id","title","res","json","data","message","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;6BAQY;AACJ,aACI,mBACK,kBAEDC,KAAK,CAACC,WAAN,CAAkBC,GAAlB,CAAsB,UAAAC,IAAI;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,WACKD,IAAI,CAACE,KADV,CADsB;AAAA,OAA1B,CAFC,CADL,CADJ;AAaH;;;;;;;;;;+CAlBiBN,KAAK,CAAC,2CAAD,C;;;AAAfO,cAAAA,G;;+CACWA,GAAG,CAACC,IAAJ,E;;;AAAXC,cAAAA,I;+CACG;AAACP,gBAAAA,WAAW,EAACO,IAAI,CAACC;AAAlB,e;;;;;;;;;;;;EAJcX,KAAK,CAACY,S,GAsBnC","sourcesContent":["import React from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\n// const FetchData=(props)=>(\r\n//     <div>\r\n//         <h3>获取服务端数据</h3>\r\n//         <ul>\r\n//             {\r\n//                 props.productList.map(item=>(\r\n//                     <li key={item.id}>\r\n//                         {item.title}\r\n//                     </li>\r\n//                 ))\r\n//             }\r\n//         </ul>\r\n//     </div>\r\n// )\r\n// // 当页面初次加载时，只会在服务端执行一次，在路由的切换时客户端才会被执行。\r\n// FetchData.getInitialProps=async function(){\r\n//   let res=await fetch(\" http://localhost:8081/api/getProductList\")\r\n//  let data=await res.json();\r\n//  return {productList:data.message}\r\n// }\r\n\r\n// export default FetchData\r\n\r\nexport default class extends React.Component{\r\n    static async getInitialProps(){\r\n        let res=await fetch(\" http://localhost:8081/api/getProductList\")\r\n        let data=await res.json();\r\n        return {productList:data.message}\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                 <ul>\r\n             {\r\n                props.productList.map(item=>(\r\n                    <li key={item.id}>\r\n                        {item.title}\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// npm install --save isomorphic-unfetch"]},"metadata":{},"sourceType":"module"}